//
//  DashboardInteractor.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 15/10/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DashboardBusinessLogic {
    func doGetAppointmentList(request: Schedule.GetAppointnents.Request, method: HTTPMethod)
    func doGetMyProfileData(accessToken: String, method: HTTPMethod)
    func doGetDashboardData(request: Dashboard.GetDashboardData.Request, method: HTTPMethod)
    func doGetForceUpdateInfo()
    func doPostDeleteAppointmentRequest(request: ModifyAppointment.DeleteAppointment.Request, appointmentId: String)
    func doPostUpdateAppointmentStatus(appointmentId: String, request: JobCard.ChangeAppointmentStatus.Request)
    func getIncentiveDashboard(request: Dashboard.GetIncentiveDashboard.Request)
    func getRevenueDashboard(request: Dashboard.GetRevenueDashboard.Request)
    func getEarningsDashboard(request: Dashboard.GetEarningsDashboard.Request)
}

class DashboardInteractor: DashboardBusinessLogic {
    
    var presenter: DashboardPresentationLogic?
    var worker: DashboardWorker?
    //var name: String = ""

    // MARK: Do something

    func doGetMyProfileData(accessToken: String, method: HTTPMethod) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.getRequestForUserProfile(accessToken: accessToken, method: method)
    }

    func doGetAppointmentList(request: Schedule.GetAppointnents.Request, method: HTTPMethod) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForAppointments(request: request, method: method)
    }

    func doGetDashboardData(request: Dashboard.GetDashboardData.Request, method: HTTPMethod) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postGetDashboardData(request: request, method: method)
    }

    func doGetForceUpdateInfo() {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.getForceUpdateInfo()
    }

    func doPostDeleteAppointmentRequest(request: ModifyAppointment.DeleteAppointment.Request, appointmentId: String) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.deleteRequestForAppointment(request: request, appointmentId: appointmentId)
    }

    func doPostUpdateAppointmentStatus(appointmentId: String, request: JobCard.ChangeAppointmentStatus.Request) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForChangeAppointmentStatus(appointmentId: appointmentId, request: request)
    }
    
    func getIncentiveDashboard(request: Dashboard.GetIncentiveDashboard.Request) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postRequestGetIncentiveDashboard(request: request)
    }
    
    func getRevenueDashboard(request: Dashboard.GetRevenueDashboard.Request) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postRequestGetRevenueDashboard(request: request)
    }
    
    //get earnings dashboard data
    func getEarningsDashboard(request: Dashboard.GetEarningsDashboard.Request) {
        worker = DashboardWorker()
        worker?.presenter = self.presenter
        worker?.postRequestGetEarningsDashboard(request: request)
    }
}
