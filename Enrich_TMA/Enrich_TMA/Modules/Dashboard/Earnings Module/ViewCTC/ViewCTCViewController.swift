//
//  ViewCTCViewController.swift
//  Enrich_TMA
//
//  Created by Harshal on 21/12/21.
//  Copyright (c) 2021 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ViewCTCDisplayLogic: class
{
 
    func displaySuccessCTC<T: Decodable> (viewModel: T)
    func displayErrorCTC(errorMessage: String?)
}

class ViewCTCViewController: UIViewController, ViewCTCDisplayLogic
{
  var interactor: ViewCTCBusinessLogic?
  var router: (NSObjectProtocol & ViewCTCRoutingLogic & ViewCTCDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = ViewCTCInteractor()
    let presenter = ViewCTCPresenter()
    let router = ViewCTCRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
    getCTCDetails()
  }
  
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.addCustomBackButton(title: "CTC Break-up")
    }
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = ViewCTC.Something.Request()
    interactor?.doSomething(request: request)
  }
  
  func displaySomething(viewModel: ViewCTC.Something.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
    
    //Get earnings dashbioard data
    func getCTCDetails() {
        EZLoadingActivity.show("Loading...", disableUI: true)
        let request = ViewCTC.GetCTCDeatils.Request()
        interactor?.getCTCDetails(request: request)
    }
    
    func displaySuccessCTC<T>(viewModel: T) where T: Decodable {
        EZLoadingActivity.hide()
       // print("Response: \(viewModel)")
        
        if let model = viewModel as? ViewCTC.GetCTCDeatils.Response, model.status == true {
            print("********* from success********* \n \(viewModel)")
           
        }
        
    }
    
    func displayErrorCTC(errorMessage: String?) {
        EZLoadingActivity.hide()
        print("Failed: \(errorMessage ?? "")")
        showAlert(alertTitle: alertTitle, alertMessage: errorMessage ?? "Request Failed")
    }
}
