//
//  AttendanceDetailsViewController.swift
//  Enrich_TMA
//
//  Created by Harshal on 24/02/21.
//  Copyright (c) 2021 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AttendanceDetailsDisplayLogic: class
{
    func displaySomething(viewModel: AttendanceDetails.Something.ViewModel)
}

class AttendanceDetailsVC: UIViewController, AttendanceDetailsDisplayLogic
{
    var interactor: AttendanceDetailsBusinessLogic?
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = AttendanceDetailsInteractor()
        let presenter = AttendanceDetailsPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
        tableView.register(UINib(nibName: CellIdentifier.incentiveDetailsHeaderCell, bundle: nil), forCellReuseIdentifier: CellIdentifier.incentiveDetailsHeaderCell)
        tableView.register(UINib(nibName: CellIdentifier.attendanceDetailsCell, bundle: nil), forCellReuseIdentifier: CellIdentifier.attendanceDetailsCell)
        tableView.register(UINib(nibName: CellIdentifier.incentiveMyDetailsCell, bundle: nil), forCellReuseIdentifier: CellIdentifier.incentiveMyDetailsCell)
        tableView.register(UINib(nibName: CellIdentifier.incentiveCommonHeaderCell, bundle: nil), forCellReuseIdentifier: CellIdentifier.incentiveCommonHeaderCell)
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.navigationBar.isHidden = false
        self.navigationController?.addCustomBackButton(title: "Attendance Details")
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = AttendanceDetails.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: AttendanceDetails.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}

extension AttendanceDetailsVC: UITableViewDelegate, UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 2
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        if section == 0 {
            return 1
        }
        else if section == 1 {
            return 15
        }
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        if indexPath.section == 0 {
            guard let cell = tableView.dequeueReusableCell(withIdentifier: CellIdentifier.incentiveMyDetailsCell, for: indexPath) as? IncentiveMyDetailsCell else {
                return UITableViewCell()
            }
            cell.configureCell(showGradientView: false, showCurrentMonthLabel: false)
            cell.selectionStyle = .none
            return cell
        }
        else {
            
            if indexPath.row == 0 {
                guard let cell = tableView.dequeueReusableCell(withIdentifier: CellIdentifier.incentiveDetailsHeaderCell, for: indexPath) as? IncentiveDetailsHeaderCell else {
                    return UITableViewCell()
                }
                cell.configureCell()
                cell.selectionStyle = .none
                return cell
            }
            else {
                guard let cell = tableView.dequeueReusableCell(withIdentifier: CellIdentifier.attendanceDetailsCell, for: indexPath) as? AttendanceDetailsCell else {
                    return UITableViewCell()
                }
                cell.selectionStyle = .none
                return cell
            }
        }
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
    
    func tableView(_ tableView: UITableView, viewForHeaderInSection section: Int) -> UIView? {
        
        if section != 0 {
            return nil
        }
        
        guard let cell = tableView.dequeueReusableCell(withIdentifier: CellIdentifier.incentiveCommonHeaderCell) as? IncentiveCommonHeaderCell else {
            return UITableViewCell()
        }
        cell.setTitle(title: "Current Month", identifier: .myDetails, showViewAll: false)
        cell.selectionStyle = .none
        return cell
    }
    
    func tableView(_ tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        return section == 0 ? 50 : 0
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        print("Selection")
    }
}
