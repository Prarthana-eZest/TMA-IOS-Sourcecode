//
//  SelectStylistAndTimeslotInteractor.swift
//  Enrich_TMA
//
//  Created by Harshal on 17/11/20.
//  Copyright (c) 2020 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectStylistAndTimeslotBusinessLogic {
    func doPostAddBlankAppointment(request: ChangeTimeSlot.AddBlank.Request)
    func doPostAddMultipleServices(request: ChangeTimeSlot.AddMultipleServices.Request)
    func doPostRequestGetServiceListWithTimeslot(request: SelectStylistAndTimeslot.ServicesWithTimeslot.Request)
    func doPostAddSingleService(request: ModifyAppointment.AddSingleService.Request, method: HTTPMethod)
}

protocol SelectStylistAndTimeslotDataStore
{
    //var name: String { get set }
}

class SelectStylistAndTimeslotInteractor: SelectStylistAndTimeslotBusinessLogic, SelectStylistAndTimeslotDataStore
{
    var presenter: SelectStylistAndTimeslotPresentationLogic?
    var worker: SelectStylistAndTimeslotWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doPostAddBlankAppointment(request: ChangeTimeSlot.AddBlank.Request) {
        worker = SelectStylistAndTimeslotWorker()
        worker?.presenter = presenter
        worker?.postRequestCreateBlankAppointment(request: request)
    }

    func doPostAddMultipleServices(request: ChangeTimeSlot.AddMultipleServices.Request) {
        worker = SelectStylistAndTimeslotWorker()
        worker?.presenter = presenter
        worker?.postRequestAddServices(request: request)
    }

    func doPostRequestGetServiceListWithTimeslot(request: SelectStylistAndTimeslot.ServicesWithTimeslot.Request) {
        worker = SelectStylistAndTimeslotWorker()
        worker?.presenter = presenter
        worker?.postRequestGetServiceListWithTimeslot(request: request)
    }
    
    func doPostAddSingleService(request: ModifyAppointment.AddSingleService.Request, method: HTTPMethod) {
        worker = SelectStylistAndTimeslotWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForAddSingleService(request: request, method: method)
    }
}
