//
//  DependentListInteractor.swift
//  Enrich_TMA
//
//  Created by Harshal on 24/11/20.
//  Copyright (c) 2020 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DependentListBusinessLogic
{
    func doPostRequestGetDependents(request: DependentList.GetDependentList.Request)
    func doPostRequestDeleteDependent(request: DependentList.DeleteDependent.Request)
}

protocol DependentListDataStore
{
    //var name: String { get set }
}

class DependentListInteractor: DependentListBusinessLogic, DependentListDataStore
{
    var presenter: DependentListPresentationLogic?
    var worker: DependentListWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func doPostRequestGetDependents(request: DependentList.GetDependentList.Request) {
        worker = DependentListWorker()
        worker?.presenter = presenter
        worker?.postRequestGetDependentList(request: request)
    }
    
    func doPostRequestDeleteDependent(request: DependentList.DeleteDependent.Request) {
        worker = DependentListWorker()
        worker?.presenter = presenter
        worker?.postRequestDeleteDependent(request: request)
    }
}
