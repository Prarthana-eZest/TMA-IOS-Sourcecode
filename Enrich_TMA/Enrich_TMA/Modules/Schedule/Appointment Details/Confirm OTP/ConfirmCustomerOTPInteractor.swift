//
//  ConfirmCustomerOTPInteractor.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 26/12/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ConfirmCustomerOTPBusinessLogic {
    func doResendBelitaOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.BelitaRequest)
    func doResendPaymentOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.PaymentRequest)
    func doConfirmOTP(accessToken: String, request: ConfirmCustomerOTP.ConfirmOTP.Request)
}

class ConfirmCustomerOTPInteractor: ConfirmCustomerOTPBusinessLogic {
    var presenter: ConfirmCustomerOTPPresentationLogic?
    var worker: ConfirmCustomerOTPWorker?
    //var name: String = ""

    // MARK: Do something

    func doResendBelitaOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.BelitaRequest) {
        worker = ConfirmCustomerOTPWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForResendBelitaOTP(accessToken: accessToken, request: request)

    }

    func doResendPaymentOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.PaymentRequest) {
        worker = ConfirmCustomerOTPWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForResendPaymentOTP(accessToken: accessToken, request: request)
    }

    func doConfirmOTP(accessToken: String, request: ConfirmCustomerOTP.ConfirmOTP.Request) {
        worker = ConfirmCustomerOTPWorker()
        worker?.presenter = self.presenter
        worker?.postRequestForConfirmOTP(accessToken: accessToken, request: request)
    }

}
