//
//  ConfirmCustomerOTPWorker.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 26/12/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class ConfirmCustomerOTPWorker {
    let networkLayer = NetworkLayerAlamofire() // Uncomment this in case do request using Alamofire for client request
    // let networkLayer = NetworkLayer() // Uncomment this in case do request using URLsession
    var presenter: ConfirmCustomerOTPPresentationLogic?

    func postRequestForResendBelitaOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.BelitaRequest) {
        // *********** NETWORK CONNECTION

        let errorHandler: (String) -> Void = { (error) in
            print(error)
            self.presenter?.presentError(responseError: error)
        }
        let successHandler: (ConfirmCustomerOTP.ResendOTP.Response) -> Void = { (response) in
            self.presenter?.presentResendOTPSuccess(response: response)
        }

        self.networkLayer.post(urlString: ConstantAPINames.sendCustomerOTP.rawValue, body: request,
                               headers: ["Authorization": "bearer \(accessToken)"],
                               successHandler: successHandler, errorHandler: errorHandler, method: .post)

    }

    func postRequestForResendPaymentOTP(accessToken: String, request: ConfirmCustomerOTP.ResendOTP.PaymentRequest) {
        // *********** NETWORK CONNECTION

        let errorHandler: (String) -> Void = { (error) in
            print(error)
            self.presenter?.presentError(responseError: error)
        }
        let successHandler: (ConfirmCustomerOTP.ResendOTP.Response) -> Void = { (response) in
            self.presenter?.presentResendOTPSuccess(response: response)
        }

        self.networkLayer.post(urlString: ConstantAPINames.sendCustomerOTP.rawValue, body: request,
                               headers: ["Authorization": "bearer \(accessToken)"],
                               successHandler: successHandler, errorHandler: errorHandler, method: .post)

    }

    func postRequestForConfirmOTP(accessToken: String, request: ConfirmCustomerOTP.ConfirmOTP.Request) {
        // *********** NETWORK CONNECTION

        let errorHandler: (String) -> Void = { (error) in
            print(error)
            self.presenter?.presentError(responseError: error)
        }
        let successHandler: (ConfirmCustomerOTP.ConfirmOTP.Response) -> Void = { (response) in
            self.presenter?.presentConfirmOTPSuccess(response: response)
        }

        self.networkLayer.post(urlString: ConstantAPINames.confirmCustomerOTP.rawValue,
                               body: request, headers: ["Authorization": "bearer \(accessToken)"], successHandler: successHandler,
                               errorHandler: errorHandler, method: .post)
    }
}
