//
//  InvoiceWorker.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 12/11/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class InvoiceWorker {
    let networkLayer = NetworkLayerAlamofire() // Uncomment this in case do request using Alamofire for client request
    var presenter: InvoicePresentationLogic?

    func getRequestForInvoiceDetails(accessToken: String, request: Invoice.GetInvoiceDetails.Request) {

        let errorHandler: (String) -> Void = { (error) in
            self.presenter?.presentError(responseError: error)
        }

        let successHandler: (Invoice.GetInvoiceDetails.Response) -> Void = { (response) in
            self.presenter?.presentGetInvoiceDetailsSuccess(response: response)
        }

        let url = ConstantAPINames.getInvoiceDetails.rawValue
            + "?appointment_id=\(request.appointment_id)"
            + "&salon_code=\(request.salon_code)"
            + "&is_custom=\(request.is_custom)"
            + "&pos_request=\(request.pos_request)"

        self.networkLayer.get(urlString: url, headers: ["X-Request-From": "tma", "Authorization": "Bearer \(accessToken)"], successHandler: successHandler, errorHandler: errorHandler)
    }

    func postRequestForChangeAppointmentStatus(appointmentId: String, request: JobCard.ChangeAppointmentStatus.Request) {

        let errorHandler: (String) -> Void = { (error) in
            print(error)
            self.presenter?.presentError(responseError: error)
        }
        let successHandler: (JobCard.ChangeAppointmentStatus.Response) -> Void = { (response) in
            print(response)
            self.presenter?.presentUpdateAppointmentStatus(response: response)
        }

        let url = ConstantAPINames.changeAppointmentStatus.rawValue + appointmentId

        self.networkLayer.post(urlString: url, body: request,
                               headers: ["X-Request-From": "tma", "Authorization": "Bearer \(GenericClass.sharedInstance.isuserLoggedIn().accessToken)"],
                               successHandler: successHandler,
                               errorHandler: errorHandler, method: .post)

    }

    func getCustomerWalletRewardPointAndPackages(customerId: String, quoteId: String) {

           let errorHandler: (String) -> Void = { (error) in
               self.presenter?.presentError(responseError: error)
           }
           let successHandler: (PaymentMode.MyWalletRewardPointsPackages.Response) -> Void = { (response) in
               self.presenter?.presentGetMyWalletRewardPointAndPackagesSuccess(response: response)
           }

           var strURL: String = "\(ConstantAPINames.myPaymentScreenPOS.rawValue)&customer_id=\(customerId)&cart_id=\(quoteId)"

           strURL = strURL.addingPercentEncoding(withAllowedCharacters: CharacterSet.urlQueryAllowed) ?? ""

           self.networkLayer.get(urlString: strURL, headers: ["Authorization": "Bearer \(GenericClass.sharedInstance.isuserLoggedIn().accessToken)"],
                                 successHandler: successHandler, errorHandler: errorHandler)

       }
}
