//
//  GenericCustomerConsulationViewController.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 04/11/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol GenericCustomerConsulationDisplayLogic: class
{
    func displaySomething(viewModel: GenericCustomerConsulation.Something.ViewModel)
}

class GenericCustomerConsulationVC: UIViewController, GenericCustomerConsulationDisplayLogic
{
    var interactor: GenericCustomerConsulationBusinessLogic?
    @IBOutlet weak private var tableView: UITableView!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = GenericCustomerConsulationInteractor()
        let presenter = GenericCustomerConsulationPresenter()
        viewController.interactor = interactor
        interactor.presenter = presenter
        presenter.viewController = viewController
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            //      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            //      if let router = router, router.responds(to: selector) {
            //        router.perform(selector, with: segue)
            //      }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        doSomething()
        
        tableView.register(UINib(nibName: "SelectGenderCell", bundle: nil), forCellReuseIdentifier: "SelectGenderCell")

    }
    
    override func viewWillAppear(_ animated: Bool) {
        self.navigationController?.navigationBar.isHidden = false
        AppDelegate.OrientationLock.lock(to: UIInterfaceOrientationMask.portrait, andRotateTo: UIInterfaceOrientation.portrait)
        self.navigationController?.addCustomBackButton(title: "Generic Customer Consulation")
        
    }
    
    func reloadData() {
        DispatchQueue.main.async {
            self.tableView.reloadData()
        }
    }
    
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = GenericCustomerConsulation.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: GenericCustomerConsulation.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}

extension GenericCustomerConsulationVC: SelectGenderDelegate{
    
    func actionGender(gender: Gender) {
        print("Selected Gender: \(gender)")
        tableView.reloadData()
    }
}

extension GenericCustomerConsulationVC: UITableViewDelegate, UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return 1
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        switch indexPath.row {
        case 0:
            guard let cell = tableView.dequeueReusableCell(withIdentifier: "SelectGenderCell", for: indexPath) as? SelectGenderCell else {
                return UITableViewCell()
            }
            cell.delegate = self
            cell.updateConstraints()
            cell.setNeedsDisplay()
            cell.setNeedsLayout()
            cell.separatorInset = UIEdgeInsets(top: 0, left: 30, bottom: 0, right: 30)
            cell.selectionStyle = .none
            return cell
            
        default:
            return UITableViewCell()
        }
        
    }
    
    func tableView(_ tableView: UITableView, heightForRowAt indexPath: IndexPath) -> CGFloat {
        return UITableView.automaticDimension
    }
}
