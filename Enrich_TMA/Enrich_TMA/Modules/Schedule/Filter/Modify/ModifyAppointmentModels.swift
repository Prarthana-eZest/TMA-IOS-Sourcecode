//
//  ModifyAppointmentModels.swift
//  Enrich_TMA
//
//  Created by Harshal Patil on 26/12/19.
//  Copyright (c) 2019 e-zest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ModifyAppointment {
    // MARK: Use cases

    enum ChangeTimeslot {

        struct Request: Codable {
            let addData: RequestDetails?
            let is_custom: Bool?
        }

        struct RequestDetails: Codable {
            let ref_id: String?
            let request_category: String?
            let employee_id: String?
            let module_name: String?
            let start_time: String?
            let end_time: String?
            let customer_id: String?
        }

        struct Response: Codable {
            var status: Bool = false
            var message: String = ""
            //var data: [Data]?
        }
    }

    enum ReplaceService {

        struct Request: Codable {
            let addData: RequestDetails?
            let is_custom: Bool?
        }

        struct RequestDetails: Codable {
            let ref_id: String?
            let request_category: String?
            let employee_id: String?
            let module_name: String?
            let start_time: String?
            let end_time: String?
            let service_id: String?
            let service_name: String?
            let service_code: String?
            let service_category: String?
            let service_duration: String?
            let buffer_time: String?
            let price: String?
            let parent_item_id: String?
            let parent_sku: String?
            let parent_name: String?
            let product_type: String?
            let is_consultation_required: String?
            let customer_id: String?
            let is_dependant: Int?
            let dependant_id: Int?
        }

        struct Response: Codable {
            var status: Bool = false
            var message: String = ""
            //var data: [Data]?
        }
    }

    enum AddSingleService {

        struct Request: Codable {
            let addData: RequestDetails?
            let is_custom: Bool?
        }

        struct RequestDetails: Codable {
            let start_time: String?
            let end_time: String?
            let appointment_id: Int64?
            let salon_id: String?
            let service_id: String?
            let price: Double?
            let nonTaxablePrice: Double?
            let employee_id: String?
            let technician: String?
            let service_name: String?
            let service_code: String?
            let service_category: String?
            let service_duration: String?
            let buffer_time: String?
            let serviceGender: String?
            let customer_name: String?
            let customer_last_name: String?
            let customer_contact: String?
            let customer_id: String?
            let customer_address1: String?
            let customer_address2: String?
            let appointment_type: String?
            let customer_gender: String?
            let inclined_other_gender: String?
            let request_category: String?
            let parent_item_id: String?
            let parent_sku: String?
            let parent_name: String?
            let product_type: String?
            let is_dependant: Int?
            var override: Int?
            let dependant_id: Int?
            let dependant_name: String?
            let dependant_age: String?
            let dependant_gender: String?
            let dependant_note: String?
            let is_consultation_required: String?
        }

        struct Response: Codable {
            var status: Bool = false
            var message: String = ""
        }
    }

    enum DeleteAppointment {

        struct Request: Codable {
            let employee_id: String?
            let appointment_id: Int64?
            let salon_id: String?
            let customer_id: Int64?
            let delete_reason: String?
            let is_custom: Bool?
        }

        struct Response: Codable {
            var status: Bool = false
            var message: String = ""
        }
    }
}
